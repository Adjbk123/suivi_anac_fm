<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
		<title>
			{% block title %}ANAC BENIN | Suivi
			{% endblock %}
		</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="description" content="">
		<meta
		name="author" content="">
	
	<!-- Favicon configuration -->
	<link rel="icon" type="image/jpeg" href="{{ asset('logo.jpg') }}">
	<link rel="icon" type="image/png" sizes="32x32" href="{{ asset('logo.jpg') }}">
	<link rel="icon" type="image/png" sizes="16x16" href="{{ asset('logo.jpg') }}">
	<link rel="apple-touch-icon" href="{{ asset('logo.jpg') }}">
	<link rel="shortcut icon" href="{{ asset('logo.jpg') }}">
	
	<!-- ================== BEGIN core-css ================== -->
		<!-- Google Fonts - Montserrat -->
		<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap" rel="stylesheet">
		<link href="{{ asset('assets/css/vendor.min.css') }}" rel="stylesheet">
		<link href="{{ asset('assets/css/app.min.css') }}" rel="stylesheet">
		<link href="{{ asset('assets/plugins/datatables.net-bs5/css/dataTables.bootstrap5.min.css') }}" rel="stylesheet">
		<link href="{{ asset('assets/plugins/datatables.net-buttons-bs5/css/buttons.bootstrap5.min.css') }}" rel="stylesheet">
		<link href="{{ asset('assets/plugins/datatables.net-responsive-bs5/css/responsive.bootstrap5.min.css') }}" rel="stylesheet">
		<link href="{{ asset('assets/plugins/bootstrap-table/dist/bootstrap-table.min.css') }}" rel="stylesheet">
		{% block stylesheets %}{% endblock %}
	<!-- ================== END core-css ================== -->
	
		<style>
		/* Application de la police Montserrat */
		body, h1, h2, h3, h4, h5, h6, p, span, div, a, button, input, textarea, select, label, table, th, td {
			font-family: 'Montserrat', sans-serif !important;
		}
		
		/* Exclure les icônes FontAwesome */
		.fa, .fas, .far, .fal, .fab, .fa-solid, .fa-regular, .fa-light, .fa-brands {
			font-family: "Font Awesome 5 Free", "Font Awesome 5 Pro", "Font Awesome 6 Free", "Font Awesome 6 Pro" !important;
		}
		
		.toast-container {
			position: fixed;
			top: 20px;
			right: 20px;
			z-index: 9999;
		}
		
		.toast {
			background: white;
			border-radius: 8px;
			box-shadow: 0 4px 12px rgba(0,0,0,0.15);
			margin-bottom: 10px;
			min-width: 300px;
			opacity: 0;
			transform: translateX(100%);
			transition: all 0.3s ease;
		}
		
		.toast.show {
			opacity: 1;
			transform: translateX(0);
		}
		
		.toast-header {
			padding: 12px 16px;
			border-bottom: 1px solid #e9ecef;
			display: flex;
			align-items: center;
			justify-content: space-between;
		}
		
		.toast-body {
			padding: 12px 16px;
		}
		
		.toast-success {
			border-left: 4px solid #28a745;
		}
		
		.toast-error {
			border-left: 4px solid #dc3545;
		}
		
		.toast-warning {
			border-left: 4px solid #ffc107;
		}
		
		.toast-info {
			border-left: 4px solid #17a2b8;
		}
		
		.toast-icon {
			margin-right: 8px;
		}
		
		.toast-close {
			background: none;
			border: none;
			font-size: 18px;
			cursor: pointer;
			color: #6c757d;
		}
		
		.toast-close:hover {
			color: #343a40;
		}
		
		/* Skeleton Loading Styles */
		.skeleton-loading {
			position: relative;
			overflow: hidden;
		}
		
		.skeleton-loading::before {
			content: '';
			position: absolute;
			top: 0;
			left: -100%;
			width: 100%;
			height: 100%;
			background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
			animation: skeleton-shimmer 1.5s infinite;
		}
		
		@keyframes skeleton-shimmer {
			0% { left: -100%; }
			100% { left: 100%; }
		}
		
		.skeleton-row {
			height: 40px;
			background: #f8f9fa;
			margin-bottom: 8px;
			border-radius: 4px;
			position: relative;
		}
		
		.skeleton-cell {
			height: 16px;
			background: #e9ecef;
			margin: 8px 6px;
			border-radius: 3px;
			animation: skeleton-pulse 1.5s ease-in-out infinite;
		}
		
		@keyframes skeleton-pulse {
			0%, 100% { opacity: 0.6; }
			50% { opacity: 1; }
		}
		
		.skeleton-table {
			width: 100%;
			border-collapse: collapse;
		}
		
		.skeleton-table th {
			height: 40px;
			background: #dee2e6;
			padding: 8px 6px;
			text-align: left;
			font-weight: bold;
			color: #495057;
		}
		
		.skeleton-table td {
			padding: 8px 6px;
			border-bottom: 1px solid #dee2e6;
		}
		
		/* Fix pour les dropdowns dans les tableaux */
		.table-responsive {
			overflow: visible !important;
		}
		
		.dataTables_wrapper {
			overflow: visible !important;
		}
		
		.table {
			overflow: visible !important;
		}
		
		.table td {
			overflow: visible !important;
		}
		
		.dropdown {
			position: relative;
		}
		
		.dropdown-menu {
			z-index: 9999 !important;
			position: absolute !important;
		}
		
		/* Assurer que les dropdowns dans les tableaux s'affichent correctement */
		.table .dropdown-menu {
			z-index: 99999 !important;
			position: absolute !important;
			transform: none !important;
		}
		
		/* Fix pour les cartes qui masquent les dropdowns */
		.card {
			overflow: visible !important;
		}
		
		.card-body {
			overflow: visible !important;
		}
		label {
			font-weight: 600;
		}
		</style>
</head>
<body>
	<!-- Toast Container -->
	<div class="toast-container" id="toastContainer"></div>
	
	<!-- BEGIN #app -->
	<div id="app" class="app">
				{% include 'partials/header.html.twig' %}
				{% include 'partials/sidebar.html.twig' %}
		
		<!-- BEGIN #content -->
		<div id="content" class="app-content">
					{% block breadcrumb %}
			<ul class="breadcrumb">
							<li class="breadcrumb-item">
								<a href="#">LAYOUT</a>
							</li>
				<li class="breadcrumb-item active">STARTER PAGE</li>
			</ul>
					{% endblock %}
			
					<div class="d-flex justify-content-between align-items-center mb-3">
						{% block page_title %}
			<h1 class="page-header">
                            {{ block('title') }}
							<small>
								{% block subtitle %}page header description goes here...
								{% endblock %}
							</small>
			</h1>
					{% endblock %}

						{% block buttons %}
							<!-- Les boutons d'action seront définis ici -->
						{% endblock %}
					</div>

			
					{% block body %}
			<p>
				Start build your page here
			</p>
					{% endblock %}
				</div>
				<!-- END #content -->

				{% include 'partials/footer.html.twig' %}
	</div>
	<!-- END #app -->
	
	<!-- ================== BEGIN core-js ================== -->
			<script src="{{ asset('assets/js/vendor.min.js') }}"></script>
			<script src="{{ asset('assets/js/app.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/@highlightjs/cdn-assets/highlight.min.js') }}"></script>
			<script src="{{ asset('assets/js/demo/highlightjs.demo.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net/js/dataTables.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net-bs5/js/dataTables.bootstrap5.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net-buttons/js/dataTables.buttons.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net-buttons/js/buttons.colVis.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net-buttons/js/buttons.html5.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net-buttons/js/buttons.print.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net-buttons-bs5/js/buttons.bootstrap5.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net-responsive/js/dataTables.responsive.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/datatables.net-responsive-bs5/js/responsive.bootstrap5.min.js') }}"></script>
			<script src="{{ asset('assets/plugins/bootstrap-table/dist/bootstrap-table.min.js') }}"></script>
			<script src="{{ asset('assets/js/demo/table-plugins.demo.js') }}"></script>
			<script src="{{ asset('assets/js/demo/sidebar-scrollspy.demo.js') }}"></script>
			
			<script>
			// Fonction pour afficher les notifications toast
			function showToast(message, type = 'info', duration = 5000) {
				const container = document.getElementById('toastContainer');
				const toast = document.createElement('div');
				const toastId = 'toast-' + Date.now();
				
				const icons = {
					success: 'fa-check-circle',
					error: 'fa-exclamation-circle',
					warning: 'fa-exclamation-triangle',
					info: 'fa-info-circle'
				};
				
				const colors = {
					success: '#28a745',
					error: '#dc3545',
					warning: '#ffc107',
					info: '#17a2b8'
				};
				
				toast.className = `toast toast-${type}`;
				toast.id = toastId;
				
				toast.innerHTML = `
					<div class="toast-header">
						<div>
							<i class="fa ${icons[type]} toast-icon" style="color: ${colors[type]}"></i>
							<strong>${type.charAt(0).toUpperCase() + type.slice(1)}</strong>
						</div>
						<button type="button" class="toast-close" onclick="closeToast('${toastId}')">&times;</button>
					</div>
					<div class="toast-body">
						${message}
					</div>
				`;
				
				container.appendChild(toast);
				
				// Animation d'entrée
				setTimeout(() => {
					toast.classList.add('show');
				}, 100);
				
				// Auto-fermeture
				if (duration > 0) {
					setTimeout(() => {
						closeToast(toastId);
					}, duration);
				}
			}
			
			// Fonction pour fermer une notification
			function closeToast(toastId) {
				const toast = document.getElementById(toastId);
				if (toast) {
					toast.classList.remove('show');
					setTimeout(() => {
						if (toast.parentNode) {
							toast.parentNode.removeChild(toast);
						}
					}, 300);
				}
			}
			
			// Fonction globale pour afficher le skeleton loading
			function showSkeletonLoading(tableId, columns = 5, rows = 10) {
				const tableContainer = document.querySelector(`#${tableId}`).closest('.table-responsive');
				const originalTable = document.querySelector(`#${tableId}`);
				
				// Créer le skeleton HTML
				let skeletonHTML = `
					<table class="skeleton-table">
						<thead>
							<tr>
				`;
				
				// Créer les en-têtes
				for (let i = 0; i < columns; i++) {
					skeletonHTML += `<th class="skeleton-loading"></th>`;
				}
				
				skeletonHTML += `
							</tr>
						</thead>
						<tbody>
				`;
				
				// Créer les lignes de skeleton
				for (let i = 0; i < rows; i++) {
					skeletonHTML += `<tr>`;
					for (let j = 0; j < columns; j++) {
						skeletonHTML += `<td><div class="skeleton-cell skeleton-loading"></div></td>`;
					}
					skeletonHTML += `</tr>`;
				}
				
				skeletonHTML += `
						</tbody>
					</table>
				`;
				
				// Masquer la table originale et afficher le skeleton
				originalTable.style.display = 'none';
				tableContainer.insertAdjacentHTML('beforeend', skeletonHTML);
				
				// Retourner la référence pour pouvoir la supprimer plus tard
				return tableContainer.querySelector('.skeleton-table');
			}
			
			// Fonction globale pour masquer le skeleton loading
			function hideSkeletonLoading(tableId) {
				const tableContainer = document.querySelector(`#${tableId}`).closest('.table-responsive');
				const originalTable = document.querySelector(`#${tableId}`);
				const skeletonTable = tableContainer.querySelector('.skeleton-table');
				
				if (skeletonTable) {
					skeletonTable.remove();
				}
				
				originalTable.style.display = 'table';
			}
			</script>
			
			{% block javascripts %}{% endblock %}
	<!-- ================== END core-js ================== -->
</body>
</html>

